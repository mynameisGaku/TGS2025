//-----------------------------------------------------------------------------
// File : DescriptorPool.h
// Desc : Descriptor Pool Module.
// Copyright(c) Pocol. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d12.h>
#include <atomic>
#include <ComPtr.h>
#include <Pool.h>

///////////////////////////////////////////////////////////////////////////////
// DescriptorHandle class
///////////////////////////////////////////////////////////////////////////////
class DescriptorHandle
{
public:
    D3D12_CPU_DESCRIPTOR_HANDLE HandleCPU;  //!< CPUディスクリプタハンドルです.
    D3D12_GPU_DESCRIPTOR_HANDLE HandleGPU;  //!< GPUディスクリプタハンドルです.

    bool HasCPU() const
    { return HandleCPU.ptr != 0; }

    bool HasGPU() const
    { return HandleGPU.ptr != 0; }
};

///////////////////////////////////////////////////////////////////////////////
// DescriptorPool class
///////////////////////////////////////////////////////////////////////////////
class DescriptorPool
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      生成処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @param[in]      pDesc       ディスクリプタヒープの構成設定です.
    //! @param[out]     ppPool      ディスクリプタプールの格納先です.
    //! @retval true    生成処理に成功.
    //! @retval false   生成処理に失敗.
    //-------------------------------------------------------------------------
    static bool Create(
        ID3D12Device*                       pDevice,
        const D3D12_DESCRIPTOR_HEAP_DESC*   pDesc,
        DescriptorPool**                    ppPool);

    //-------------------------------------------------------------------------
    //! @brief      参照カウントを増やします.
    //-------------------------------------------------------------------------
    void AddRef();

    //-------------------------------------------------------------------------
    //! @brief      解放処理を行います.
    //-------------------------------------------------------------------------
    void Release();

    //-------------------------------------------------------------------------
    //! @brief      参照カウントを取得します.
    //!
    //! @return     参照カウントを返却します.
    //-------------------------------------------------------------------------
    uint32_t GetCount() const;

    //-------------------------------------------------------------------------
    //! @brief      ディスクリプタハンドルを割り当てます.
    //!
    //! @return     割り当てられたディスクリプタハンドルを返却します.
    //-------------------------------------------------------------------------
    DescriptorHandle* AllocHandle();

    //-------------------------------------------------------------------------
    //! @brief      ディスクリプタハンドルを解放します.
    //!
    //! @param[in]      pHandle     解放するハンドルへのポインタです.
    //-------------------------------------------------------------------------
    void FreeHandle(DescriptorHandle*& pHandle);

    //-------------------------------------------------------------------------
    //! @brief      利用可能なハンドル数を取得します.
    //!
    //! @return     利用可能なハンドル数を返却します.
    //-------------------------------------------------------------------------
    uint32_t GetAvailableHandleCount() const;

    //-------------------------------------------------------------------------
    //! @brief      割り当て済みのハンドル数を取得します.
    //!
    //! @return     割り当て済みのハンドル数を返却します.
    //-------------------------------------------------------------------------
    uint32_t GetAllocatedHandleCount() const;

    //-------------------------------------------------------------------------
    //! @brief      ハンドル総数を取得します.
    //!
    //! @return     ハンドル総数を返却します.
    //-------------------------------------------------------------------------
    uint32_t GetHandleCount() const;

    //-------------------------------------------------------------------------
    //! @brief      ディスクリプタヒープを取得します.
    //!
    //! @return     ディスクリプタヒープを返却します.
    //-------------------------------------------------------------------------
    ID3D12DescriptorHeap* const GetHeap() const;

private:
    //=========================================================================
    // private varaibles.
    //=========================================================================
    std::atomic<uint32_t>           m_RefCount;         //!< 参照カウントです.
    Pool<DescriptorHandle>          m_Pool;             //!< ディスクリプタハンドルプールです.
    ComPtr<ID3D12DescriptorHeap>    m_pHeap;            //!< ディスクリプタヒープです.
    uint32_t                        m_DescriptorSize;   //!< ディスクリプタサイズです.

    //=========================================================================
    // private methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    DescriptorPool();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~DescriptorPool();

    DescriptorPool  (const DescriptorPool&) = delete;   // アクセス禁止.
    void operator = (const DescriptorPool&) = delete;   // アクセス禁止.
};
